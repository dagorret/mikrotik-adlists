name: Build unified adlist

on:
  schedule:
    - cron: "0 */12 * * *"
  push:
    branches: [ main ]
    paths:
      - "sources.txt"
      - "sources/**"
      - "scripts/**"
      - ".github/workflows/build.yml"
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.meta.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Compute tag
        id: meta
        run: echo "tag=daily-$(date +%Y%m%d)" >> "$GITHUB_OUTPUT"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install idna

      - name: Build lists
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p build tmp
          : > tmp/raw.txt

          if [ ! -f sources.txt ]; then
            echo "ERROR: missing sources.txt at repo root" >&2
            exit 1
          fi

          # Download sources declared in sources.txt
          while IFS= read -r u; do
            [ -z "${u:-}" ] && continue
            echo "downloading $u"
            curl -fsSL "$u" >> tmp/raw.txt || true
            echo >> tmp/raw.txt
          done < sources.txt

          # Generate outputs
          python scripts/sanitize.py

      - name: Build index and .nojekyll
        run: |
          echo "" > build/.nojekyll
          printf '%s\n' \
            '<!doctype html>' \
            '<html lang="es"><head><meta charset="utf-8"><title>Mikrotik Adlists</title><meta name="viewport" content="width=device-width,initial-scale=1"><style>body{font-family:sans-serif;max-width:900px;margin:2rem auto;line-height:1.6;padding:0 1rem}code,pre{background:#f4f4f4;padding:.2rem .4rem;border-radius:4px}a{color:#0056b3;text-decoration:none}a:hover{text-decoration:underline}footer{margin-top:2rem;font-size:.9em;color:#555}</style></head><body>' \
            '<h1>mikrotik-adlists</h1>' \
            '<p>Listas unificadas (AdBlock, AdGuard, Technitium, Pi-hole, dnsmasq, Unbound)</p>' \
            '<ul>' \
            '<li><a href="unified-adblock.txt">AdBlock / uBlock</a></li>' \
            '<li><a href="unified-adguard.txt">AdGuard</a></li>' \
            '<li><a href="technitium-domains.txt">Technitium dominios</a></li>' \
            '<li><a href="technitium-hosts.txt">Technitium hosts</a></li>' \
            '<li><a href="pihole-hosts.txt">Pi-hole</a></li>' \
            '<li><a href="dnsmasq.conf">dnsmasq</a></li>' \
            '<li><a href="unbound.conf">Unbound</a></li>' \
            '<li><a href="domains.txt">Dominios base</a></li>' \
            '<li><a href="SHA256SUMS">SHA256SUMS</a></li>' \
            '</ul><footer>Â© 2025</footer></body></html>' \
            > build/index.html

      - name: Commit artifacts (repo)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add build/
          git commit -m "Daily build (sanitized)" || echo "No changes"
          git push

      - uses: actions/upload-pages-artifact@v3
        with:
          path: build

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.build.outputs.tag }}
          name: "Daily build ${{ needs.build.outputs.tag }}"
          files: |
            build/domains.txt
            build/unified-adblock.txt
            build/unified-adguard.txt
            build/technitium-domains.txt
            build/technitium-hosts.txt
            build/pihole-hosts.txt
            build/dnsmasq.conf
            build/unbound.conf
            build/SHA256SUMS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy_pages:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
